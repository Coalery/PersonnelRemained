{"version":3,"file":"component---src-pages-index-tsx-fa17bed5f282dccd841d.js","mappings":"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","sources":["webpack://personnel-remained/./src/config/index.ts","webpack://personnel-remained/./src/util/index.ts","webpack://personnel-remained/./src/pages/index.tsx"],"sourcesContent":["interface IConfig {\r\n  start: Date;\r\n  end: Date;\r\n  name: string;\r\n  subject: string;\r\n  color: string;\r\n}\r\n\r\nexport const Config: IConfig = {\r\n  start: new Date(2022, 2, 16), // 2022년 3월 16일\r\n  end: new Date(2024, 2, 20), // 2024년 3월 20일\r\n  name: '러리',\r\n  subject: '산업기능요원',\r\n  color: '#48e9c6',\r\n};\r\n","import { Config } from '../config';\r\n\r\nexport function min(a: number, b: number): number {\r\n  return a < b ? a : b;\r\n}\r\n\r\nexport function formatDate(date: Date): string {\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n\r\n  let monthStr = month.toString();\r\n  let dayStr = day.toString();\r\n\r\n  if (month < 10) monthStr = '0' + monthStr;\r\n  if (day < 10) dayStr = '0' + dayStr;\r\n\r\n  return `${year}-${monthStr}-${dayStr}`;\r\n}\r\n\r\nexport function calcPercent(curDate: Date): string {\r\n  const { start, end } = Config;\r\n\r\n  const startDate = start;\r\n  const endDate = new Date(\r\n    end.getFullYear(),\r\n    end.getMonth(),\r\n    end.getDate(),\r\n    23,\r\n    59,\r\n    59\r\n  );\r\n\r\n  const totalDelta = endDate.getTime() - startDate.getTime();\r\n  const curDelta = curDate.getTime() - startDate.getTime();\r\n\r\n  const percent = min((curDelta / totalDelta) * 100.0, 100.0).toFixed(15) + '%';\r\n\r\n  return percent;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { formatDate, calcPercent } from '../util';\r\nimport { Config } from '../config';\r\n\r\nimport '../styles/index.scss';\r\n\r\nfunction Title() {\r\n  const { name, subject, color } = Config;\r\n\r\n  return (\r\n    <h1 className=\"title\">\r\n      {name}의<br />\r\n      <span style={{ color }}>{subject}</span> <span>현황</span>\r\n    </h1>\r\n  );\r\n}\r\n\r\nconst DateIndicator = React.memo(() => {\r\n  const { start, end } = Config;\r\n\r\n  return (\r\n    <div className=\"date-indicator\">\r\n      <p>{formatDate(start)}</p>\r\n      <p>{formatDate(end)}</p>\r\n    </div>\r\n  );\r\n});\r\n\r\ntype ProgressBarProps = {\r\n  percent: string;\r\n};\r\n\r\nfunction ProgressBar({ percent }: ProgressBarProps) {\r\n  const { color } = Config;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"progress-bar-container\">\r\n        <div className=\"background\"></div>\r\n        <div\r\n          className=\"progress-bar\"\r\n          style={{ width: percent, backgroundColor: color }}\r\n        ></div>\r\n      </div>\r\n      <DateIndicator />\r\n    </>\r\n  );\r\n}\r\n\r\ntype ContentProps = {\r\n  percent: string;\r\n};\r\n\r\nfunction Content({ percent }: ContentProps) {\r\n  const { start, end } = Config;\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <p className=\"date-range\">\r\n        {formatDate(start)}부터 {formatDate(end)}까지,\r\n      </p>\r\n      <p>\r\n        <span className=\"percent\">{percent}</span> 진행 중!\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction IndexPage() {\r\n  const [curDate, setDate] = useState(new Date());\r\n  const { name, subject } = Config;\r\n\r\n  const percent = calcPercent(curDate);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setDate(new Date()), 25);\r\n    return () => clearInterval(timer);\r\n  }, [setDate]);\r\n\r\n  return (\r\n    <main>\r\n      <title>\r\n        {name}의 {subject} 현황\r\n      </title>\r\n      <div className=\"container\">\r\n        <Title />\r\n        <ProgressBar percent={percent} />\r\n        <Content percent={percent} />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default IndexPage;\r\n"],"names":["Config","start","Date","end","name","subject","color","formatDate","date","year","getFullYear","month","getMonth","day","getDate","monthStr","toString","dayStr","Title","React","className","style","DateIndicator","ProgressBar","percent","width","backgroundColor","Content","useState","curDate","setDate","a","b","startDate","totalDelta","getTime","curDelta","toFixed","calcPercent","useEffect","timer","setInterval","clearInterval"],"sourceRoot":""}